version: 2.1

orbs:
  python: circleci/python@1.5.0


jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.8.13
    steps:
      - checkout
      - run:
          name: Install Python deps in a venv
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install --upgrade pip wheel
            pip install backports.zoneinfo
            pip install -r requirements.txt


  deploy-staging:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Build and push Docker image
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker build -t haynesb/xdb:$CIRCLE_TAG .
            docker push haynesb/xdb:$CIRCLE_TAG
      - run:
          name: SSH in to DigitalOcean Server & Run Containers via Deploy.sh Script
          command: ssh -oStrictHostKeyChecking=no -v $DROPLET_USER_STAGING@$DROPLET_IP "bash deploy-staging.sh $CIRCLE_TAG $DJANGO_SETTINGS_MODULE_STAGING $MYSQL_DATABASE_NAME_STAGING $MYSQL_DATABASE_USERNAME_STAGING $MYSQL_DATABASE_PASSWORD_STAGING $MYSQL_DATABASE_ROOT_PASSWORD_STAGING"


          
  deploy-production:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - run:
          name: SSH in to DigitalOcean Server & Run Containers via Deploy.sh Script
          command: ssh -oStrictHostKeyChecking=no -v $DROPLET_USER_PROD@$DROPLET_IP "bash deploy-production.sh $CIRCLE_TAG $DJANGO_SETTINGS_MODULE $MYSQL_DATABASE_NAME_PRODUCTION $MYSQL_DATABASE_USERNAME_PRODUCTION $MYSQL_DATABASE_PASSWORD_PRODUCTION $MYSQL_DATABASE_ROOT_PASSWORD_PRODUCTION"
      


workflows:
  version: 2
  build:
    jobs:
      - build-and-test:
          filters:
            tags:
              only: /.*/
      - deploy-staging:
          requires:
          - build-and-test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - hold:
          type: approval
          requires:
            - deploy-staging
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
      - deploy-production:
          requires:
          - hold
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/